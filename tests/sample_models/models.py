import os.path

models = [
    {
        "id": "orders",
        "long_name": "A simple model for shipment orders",
        "description": "This model was made up to be a simple case which could represent real business cases.",
        "xsd_path": "tests/sample_models/orders/orders.xsd",
        "xml_path": "tests/sample_models/orders/xml",
        "versions": [
            {
                "config": {
                    "tables": {
                        "shiporder": {"fields": {"orderperson": {"transform": False}}}
                    }
                }
            },
            {
                "config": {
                    "row_numbers": True,
                    "tables": {
                        "item": {"reuse": False},
                        "shiporder": {"fields": {"orderperson": {"transform": False}}},
                        "companyId": {"choice_transform": False},
                    },
                },
            },
            {
                "config": {
                    "tables": {
                        "shiporder": {"reuse": False},
                        "item": {"fields": {"product": {"transform": False}}},
                    }
                }
            },
        ],
    },
    {
        "id": "table1",
        "long_name": "Data model for reporting standard contracts in the European energy markets",
        "description": "This model is one of the official models published by the Agency for the cooperation of energy"
        "regulators to report energy markets transaction data.",
        "xsd_path": "tests/sample_models/table1/Table1_V2.xsd",
        "xml_path": "tests/sample_models/table1/xml",
        "versions": [
            {"config": {}},
            {
                "config": {
                    "row_numbers": True,
                    "as_columnstore": True,
                    "tables": {
                        "TradeReport": {"reuse": False},
                        "OrderReport": {"reuse": False},
                        "legContract": {"reuse": False},
                        "legContractId": {"reuse": False},
                    },
                }
            },
        ],
    },
    {
        "id": "junit10",
        "long_name": "Xunit test result format generated by Pytest",
        "description": (
            "Xunit XSD was taken from https://github.com/jenkinsci/xunit-plugin/blob/master/src/main/resources/org/jenkinsci/plugins/xunit/types/model/xsd/junit-10.xsd"
            " and amended to remove its recursive nature."
        ),
        "xsd_path": "tests/sample_models/junit10/junit-10.xsd",
        "xml_path": "tests/sample_models/junit10/xml",
        "versions": [
            {"config": {}},
            {
                "config": {
                    "tables": {
                        "junit10": {
                            "fields": {
                                "testsuites": {
                                    "transform": False,
                                }
                            }
                        }
                    },
                }
            },
        ],
    },
]

if __name__ == "__main__":
    from xml2db import DataModel

    for model_config in models:
        for i in range(len(model_config["versions"])):
            model = DataModel(
                os.path.join("../../", model_config["xsd_path"]),
                model_config=model_config["versions"][i]["config"],
                short_name=model_config["id"],
                long_name=model_config["long_name"],
            )
            with open(
                os.path.join(
                    "../../",
                    os.path.dirname(model_config["xsd_path"]),
                    f"{model_config['id']}_ERD_version{i}.md",
                ),
                "wt",
            ) as f:
                f.write(model.get_entity_rel_diagram())
